<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>Dylan&#39;s Blog</title>
  
  <subtitle>记录、分享、交流</subtitle>
  <link href="/atom.xml" rel="self"/>
  
  <link href="https://blog.puchao.cc/"/>
  <updated>2019-05-26T14:58:24.974Z</updated>
  <id>https://blog.puchao.cc/</id>
  
  <author>
    <name>Dylan</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>JavaScript基础方法集合</title>
    <link href="https://blog.puchao.cc/2019/05/26/%E5%9F%BA%E7%A1%80%E6%96%B9%E6%B3%95%E9%9B%86%E5%90%88/"/>
    <id>https://blog.puchao.cc/2019/05/26/基础方法集合/</id>
    <published>2019-05-26T14:44:09.000Z</published>
    <updated>2019-05-26T14:58:24.974Z</updated>
    
    <content type="html"><![CDATA[<h2 id="一、查找、检索字符串"><a href="#一、查找、检索字符串" class="headerlink" title="一、查找、检索字符串"></a>一、查找、检索字符串</h2><h3 id="1-indexOf-方法"><a href="#1-indexOf-方法" class="headerlink" title="1. indexOf() 方法"></a>1. <code>indexOf()</code> 方法</h3><blockquote><p><code>indexOf()</code> 方法返回字符串中指定文本<strong>首次</strong>出现的位置。</p><p><strong><strong>实例</strong></strong></p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">&gt; <span class="keyword">var</span> str = <span class="string">"The full name of China is the People's Republic of China."</span>;</span><br><span class="line">&gt; <span class="keyword">var</span> pos = str.indexOf(<span class="string">"China"</span>);</span><br><span class="line">&gt; <span class="comment">// 返回 17 </span></span><br><span class="line">&gt;</span><br></pre></td></tr></table></figure></blockquote><hr><h3 id="2-lastIndexOf-方法"><a href="#2-lastIndexOf-方法" class="headerlink" title="2. lastIndexOf() 方法"></a>2. <code>lastIndexOf()</code> 方法</h3><blockquote><p> <code>lastIndexOf()</code> 方法返回置地文本在字符串<strong>最后一次</strong>出现的位置。</p><p><strong><strong>实例</strong></strong></p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">&gt; <span class="keyword">var</span> str = <span class="string">"The full name of China is the People's Republic of China."</span>;</span><br><span class="line">&gt; <span class="keyword">var</span> pos = str.lastIndexOf(<span class="string">"China"</span>);</span><br><span class="line">&gt; <span class="comment">// 返回 51 </span></span><br><span class="line">&gt;</span><br></pre></td></tr></table></figure></blockquote><ul><li>注：如果未找到文本， <code>indexOf()</code> 和 <code>lastIndexOf()</code> 均返回 -1。</li></ul><hr><h3 id="3-search-方法"><a href="#3-search-方法" class="headerlink" title="3.  search() 方法"></a>3.  <code>search()</code> 方法</h3><blockquote><p><code>search()</code> 方法搜索特定值的字符串，并返回匹配的位置。</p><p>与1 的区别：<code>search()</code> 方法可以设置更强大的搜索值（正则表达式）。</p><p><strong><strong>实例</strong></strong></p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">&gt; <span class="keyword">var</span> str = <span class="string">"The full name of China is the People's Republic of China."</span>;</span><br><span class="line">&gt; <span class="keyword">var</span> pos = str.search(<span class="string">"locate"</span>);</span><br><span class="line">&gt; <span class="comment">// 返回 17 </span></span><br><span class="line">&gt;</span><br></pre></td></tr></table></figure></blockquote><hr><h3 id="4-charAt-方法"><a href="#4-charAt-方法" class="headerlink" title="4. charAt() 方法"></a>4. <code>charAt()</code> 方法</h3><blockquote><p><code>charAt()</code> 方法返回字符串中指定下标（位置）的字符串：</p><p><strong><strong>实例</strong></strong></p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">&gt; <span class="keyword">var</span> str = <span class="string">"HELLO WORLD"</span>;</span><br><span class="line">&gt; str.charAt(<span class="number">0</span>);</span><br><span class="line">&gt; <span class="comment">// 返回 H </span></span><br><span class="line">&gt;</span><br></pre></td></tr></table></figure></blockquote><hr><h3 id="5-charCodeAt-方法"><a href="#5-charCodeAt-方法" class="headerlink" title="5.charCodeAt() 方法"></a>5.<code>charCodeAt()</code> 方法</h3><blockquote><p><code>charCodeAt()</code> 方法返回字符串中指定索引的字符 Unicode 编码：</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">&gt; <span class="keyword">var</span> str = <span class="string">"HELLO WORLD"</span>;</span><br><span class="line">&gt; str.charCodeAt(<span class="number">0</span>); </span><br><span class="line">&gt; <span class="comment">// 返回 72 </span></span><br><span class="line">&gt;</span><br></pre></td></tr></table></figure></blockquote><blockquote></blockquote><h3 id="注-："><a href="#注-：" class="headerlink" title="注 ："></a>注 ：</h3><blockquote><p>两种方法，<code>indexOf()</code> 与 <code>search()</code>，这两种方法是<strong><em>不相等`</em></strong>的。区别在于：</p><ul><li><code>search()</code> 方法无法设置第二个开始位置参数。</li><li><code>indexOf()</code> 方法无法设置更强大的搜索值（正则表达式）。</li></ul></blockquote><hr><h2 id="二、分割提取部分字符串"><a href="#二、分割提取部分字符串" class="headerlink" title="二、分割提取部分字符串"></a>二、分割提取部分字符串</h2><h3 id="1-slice-方法"><a href="#1-slice-方法" class="headerlink" title="1. slice() 方法"></a>1. <code>slice()</code> 方法</h3><blockquote><p><code>slice()</code> 方法提取字符串的某个部分并在新字符串中返回被提取的部分。</p><p>该方法设置两个参数：起始索引（开始位置），终止索引（结束位置）。</p><p><strong><strong>实例</strong></strong></p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">&gt; <span class="keyword">var</span> str = <span class="string">"Apple, Banana, Mango"</span>;</span><br><span class="line">&gt; <span class="keyword">var</span> res = str.slice(<span class="number">7</span>,<span class="number">13</span>);</span><br><span class="line">&gt; <span class="comment">// 返回 Banana </span></span><br><span class="line">&gt;</span><br></pre></td></tr></table></figure></blockquote><blockquote><p>如果某个参数为负，则从字符串的结尾开始计数:</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">&gt; <span class="keyword">var</span> str = <span class="string">"Apple, Banana, Mango"</span>;</span><br><span class="line">&gt; <span class="keyword">var</span> res = str.slice(<span class="number">-13</span>,<span class="number">-7</span>);</span><br><span class="line">&gt; <span class="comment">// 返回 Banana</span></span><br><span class="line">&gt;</span><br></pre></td></tr></table></figure></blockquote><blockquote><p>如果省略第二个参数，则该方法将裁剪字符串的剩余部分：</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">&gt; <span class="keyword">var</span> str = <span class="string">"Apple, Banana, Mango"</span>;</span><br><span class="line">&gt; <span class="keyword">var</span> res = str.slice(<span class="number">-13</span>,<span class="number">-7</span>);</span><br><span class="line">&gt; <span class="comment">// 返回 Banana, Mango </span></span><br><span class="line">&gt;</span><br></pre></td></tr></table></figure></blockquote><blockquote><p>或者从结尾计数：</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">&gt; <span class="keyword">var</span> str = <span class="string">"Apple, Banana, Mango"</span>;</span><br><span class="line">&gt; <span class="keyword">var</span> res = str.slice(<span class="number">-13</span>,<span class="number">-7</span>);</span><br><span class="line">&gt; <span class="comment">// 返回 Banana, Mango </span></span><br><span class="line">&gt;</span><br></pre></td></tr></table></figure></blockquote><blockquote><p>注：负值位置不适用 Internet Explorer 8 及其更早版本。</p></blockquote><hr><h3 id="2-substring-方法"><a href="#2-substring-方法" class="headerlink" title="2.substring() 方法"></a>2.<code>substring()</code> 方法</h3><blockquote><p><code>substring()</code> 类似于 <code>slice()</code>。不同之处在于 substring() 无法接受负的索引。</p><p><strong><strong>实例</strong></strong></p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">&gt; <span class="keyword">var</span> str = <span class="string">"Apple, Banana, Mango"</span>;</span><br><span class="line">&gt; <span class="keyword">var</span> res = str.substring(<span class="number">7</span>,<span class="number">13</span>);</span><br><span class="line">&gt; <span class="comment">// 返回 Banana </span></span><br><span class="line">&gt;</span><br></pre></td></tr></table></figure></blockquote><blockquote><p>如果省略第二个参数，则该 <code>substring()</code> 将裁剪字符串的剩余部分。</p></blockquote><hr><h3 id="3-substr-方法"><a href="#3-substr-方法" class="headerlink" title="3.substr() 方法"></a>3.<code>substr()</code> 方法</h3><blockquote><p><code>substr()</code> 类似于 <code>slice()</code>。不同之处在于第二个参数规定被提取部分的<strong><em>长度</em></strong>。</p><p><strong><strong>实例</strong></strong></p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">&gt; <span class="keyword">var</span> str = <span class="string">"Apple, Banana, Mango"</span>;</span><br><span class="line">&gt; <span class="keyword">var</span> res = str.substr(<span class="number">7</span>,<span class="number">6</span>);</span><br><span class="line">&gt; <span class="comment">// 返回 Banana</span></span><br><span class="line">&gt;</span><br></pre></td></tr></table></figure></blockquote><blockquote><p>如果省略第二个参数，则该 <code>substr()</code> 将裁剪字符串的剩余部分。</p><p>如果首个参数为负，则从字符串的结尾计算位置。</p><p>第二个参数不能为负，因为它定义的是长度。</p></blockquote><hr><h2 id="三、替换字符串内容"><a href="#三、替换字符串内容" class="headerlink" title="三、替换字符串内容"></a>三、替换字符串内容</h2><h3 id="1-replace-方法"><a href="#1-replace-方法" class="headerlink" title="1. replace()方法"></a>1. <code>replace()</code>方法</h3><blockquote><p><code>replace()</code> 方法用另一个值替换在字符串中指定的值：</p><p>一共两个参数，第一个是要替换的字符串，第二个是想要替换的结果</p><p><strong><strong>实例</strong></strong></p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">&gt; str = <span class="string">"Please visit Microsoft and Microsoft and MICROSOFT!"</span>;</span><br><span class="line">&gt; <span class="keyword">var</span> n = str.replace(<span class="string">"Microsoft"</span>, <span class="string">"W3School"</span>);</span><br><span class="line">&gt; <span class="comment">// 得到 n = Please visit W3School and Microsoft and MICROSOFT!</span></span><br><span class="line">&gt;</span><br></pre></td></tr></table></figure></blockquote><blockquote><p>replace() 方法不会改变调用它的字符串。它返回的是新字符串。默认地，replace() <em>只替换首个匹配</em>, replace() 对大小写敏感。</p></blockquote><hr><h2 id="四、转换为大写和小写"><a href="#四、转换为大写和小写" class="headerlink" title="四、转换为大写和小写"></a>四、转换为大写和小写</h2><h3 id="1-toUpperCase-方法"><a href="#1-toUpperCase-方法" class="headerlink" title="1. toUpperCase() 方法"></a>1. <code>toUpperCase()</code> 方法</h3><blockquote><p>通过 <code>toUpperCase()</code> 把字符串转换为大写：</p><p><strong><strong>实例</strong></strong></p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">&gt; <span class="keyword">var</span> text1 = <span class="string">"Hello World!"</span>;</span><br><span class="line">&gt; <span class="keyword">var</span> text2 = text1.toUpperCase(); </span><br><span class="line">&gt; <span class="comment">// 得到 text = "HELLO WORLD!"</span></span><br><span class="line">&gt;</span><br></pre></td></tr></table></figure></blockquote><hr><h3 id="2-toLowerCase-方法"><a href="#2-toLowerCase-方法" class="headerlink" title="2.toLowerCase() 方法"></a>2.<code>toLowerCase()</code> 方法</h3><blockquote><p>通过 <code>toLowerCase()</code> 把字符串转换为小写：</p><p><strong><strong>实例</strong></strong> </p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">&gt; <span class="keyword">var</span> text1 = <span class="string">"Hello World!"</span>;</span><br><span class="line">&gt; <span class="keyword">var</span> text2 = text1.toLowerCase();</span><br><span class="line">&gt; <span class="comment">// 得到 text2 = "hello world!"</span></span><br><span class="line">&gt;</span><br></pre></td></tr></table></figure></blockquote><hr><h2 id="五、字符串的格式化"><a href="#五、字符串的格式化" class="headerlink" title="五、字符串的格式化"></a>五、字符串的格式化</h2><h3 id="1-concat-方法"><a href="#1-concat-方法" class="headerlink" title="1. concat() 方法"></a>1. <code>concat()</code> 方法</h3><blockquote><p><code>concat()</code> 连接两个或多个字符串：</p><p><strong><strong>实例</strong></strong></p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">&gt; <span class="keyword">var</span> text1 = <span class="string">"Hello"</span>;</span><br><span class="line">&gt; <span class="keyword">var</span> text2 = <span class="string">"World"</span>;</span><br><span class="line">&gt; text3 = text1.concat(<span class="string">" "</span>,text2,<span class="string">"!"</span>);</span><br><span class="line">&gt; <span class="comment">// 得到text3 = "Hello World!"</span></span><br><span class="line">&gt;</span><br></pre></td></tr></table></figure></blockquote><hr><h3 id="2-trim-方式"><a href="#2-trim-方式" class="headerlink" title="2. trim()方式"></a>2. <code>trim()</code>方式</h3><blockquote><p><code>trim()</code> 方法删除字符串两端的空白符：</p><p><strong><strong>实例</strong></strong></p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">&gt; <span class="keyword">var</span> str = <span class="string">"       Hello World!        "</span>;</span><br><span class="line">&gt; alert(str.trim());</span><br><span class="line">&gt; <span class="comment">// 返回 "Hello world!"</span></span><br><span class="line">&gt;</span><br></pre></td></tr></table></figure></blockquote><blockquote><p>注：Internet Explorer 8 或更低版本不支持 <code>trim()</code> 方法。</p></blockquote><hr><h2 id="六、把字符串转换为数组"><a href="#六、把字符串转换为数组" class="headerlink" title="六、把字符串转换为数组"></a>六、把字符串转换为数组</h2><h3 id="1-split-方法"><a href="#1-split-方法" class="headerlink" title="1.split()方法"></a>1.<code>split()</code>方法</h3><blockquote><p>可以通过 <code>split()</code> 将字符串转换为数组：</p><p><strong><strong>实例</strong></strong></p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">&gt; <span class="keyword">var</span> txt = <span class="string">"a,b,c,d,e"</span>;</span><br><span class="line">&gt; txt.split(<span class="string">","</span>);          <span class="comment">// 用逗号分隔</span></span><br><span class="line">&gt; txt.split(<span class="string">" "</span>);          <span class="comment">// 用空格分隔</span></span><br><span class="line">&gt; txt.split(<span class="string">"|"</span>);          <span class="comment">// 用竖线分隔</span></span><br><span class="line">&gt;</span><br></pre></td></tr></table></figure></blockquote><blockquote><p>如果省略分隔符，被返回的数组将包含 index [0] 中的整个字符串。</p></blockquote><hr>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;一、查找、检索字符串&quot;&gt;&lt;a href=&quot;#一、查找、检索字符串&quot; class=&quot;headerlink&quot; title=&quot;一、查找、检索字符串&quot;&gt;&lt;/a&gt;一、查找、检索字符串&lt;/h2&gt;&lt;h3 id=&quot;1-indexOf-方法&quot;&gt;&lt;a href=&quot;#1-indexOf
      
    
    </summary>
    
      <category term="前端" scheme="https://blog.puchao.cc/categories/%E5%89%8D%E7%AB%AF/"/>
    
    
      <category term="JS方法" scheme="https://blog.puchao.cc/tags/JS%E6%96%B9%E6%B3%95/"/>
    
  </entry>
  
  <entry>
    <title>名言警句</title>
    <link href="https://blog.puchao.cc/2019/05/21/%E5%90%8D%E8%A8%80%E8%AD%A6%E5%8F%A5/"/>
    <id>https://blog.puchao.cc/2019/05/21/名言警句/</id>
    <published>2019-05-21T09:29:49.000Z</published>
    <updated>2019-05-21T11:12:51.985Z</updated>
    
    <content type="html"><![CDATA[<blockquote class="blockquote-center">宁愿花时间修炼不完美的自己，也不要浪费时间期待完美的别人</blockquote><h1 id="名言警句收录"><a href="#名言警句收录" class="headerlink" title="名言警句收录"></a>名言警句收录</h1><h2 id="正能量"><a href="#正能量" class="headerlink" title="正能量"></a>正能量</h2><blockquote><ol><li>我们都得经历一段努力闭嘴不抱怨的时光，才能熠熠生辉，才能去更酷的地方，成为更酷的人。<a id="more"></a></li><li>没有有白费的努力，也没有碰巧的成功。只要认真对待生活，终有一天，你的每一份努力，都将绚烂成花</li><li>成功的机会是人人平等，失败的几率却有所不同。</li><li>人格是做人的品牌。人格如金，纯度越高，品位越高。做人一辈子，人品做底子。看看不同的风景，接触不同的人和事。</li><li>有句话说的好，不打没有准备的仗，做事之前要修炼自己，有能力才会有魄力，有魄力才会有勇气，有这样的胆色才能把能力发挥到极致，那么你就成功了！</li><li>懒惰是很奇怪的东西，它使你以为那是安逸，是休息，是福气。但实际上它给你的是无聊，是倦怠，是消沉。</li><li>无论生活中还是工作中，我们很难事事顺心，但我们可以做到事事尽心。很多时候，一件事情、一份工作能否做好，往往取决于我们的态度，积极的态度就是成功的保证。认真细致、尽心尽力的去做每一件事，这样我们才能收获惊喜、成长自己。</li><li>宁愿花时间修炼不完美的自己，也不要浪费时间期待完美的别人。</li><li>一个人真正的智慧，是用积极的心态，专注于自己喜欢的事，别人怎么说，怎么看，都不重要，重要的是要活出自己。</li><li>愿你成为自己喜欢的样子，不抱怨，不将就，有野心，有光芒！</li><li>要永远坚信这一点：一切都会变的，无论受多大创伤心情多么沉重，一贫如洗也好，都要坚持住。太阳落了还会升起，不幸的日子总会有尽头，过去是这样，将来也是这样。</li><li>用笑脸去面对现实，用微笑去对待生活！人生是一场孤旅。你就是你，世上再没有第二个。世上只有相似的人，没有完全相同的人。无论是走在人群中，还是只身站在旷野里，你都要承担起只有你才有的一切。</li><li>生活就是一场修行，修自己的耐心、恒心、平常心。人生，就是一边拥有，一边失去；一边选择，一边放弃。今天陌生的，是昨天熟悉的；现在记住的，是以后淡忘的。不是人生选择了你，而是你选择了人生。</li><li>其实人一生的需求很简单：温暖的家、贴心的伴侣。要有快乐的时光，还要有一点点笨笨的信念。当然，最好能有一个强调感恩的信仰。这样身体和心灵就不会孤单了。谦和是一种智慧，懂得谦卑的人，必将得到尊重。</li><li>做一个有个性的人，给自己一点自信！ 成功的道路靠自己闯，美好的前途来自于自强自立， 不屈服于任何权威，用自我的努力找到属于你的自尊。 不懂得“俭”字的人，不知道如何成功，任何成功的事业都在于点滴的积累； 不懂得“俭”字的人，只会丧失成功，过分的骄奢多败人品质。</li><li>别再问我工作何必这么拼，我之所以这么努力，因为我想要的生活比你的贵。</li><li>一个人真正的幸福并不是呆在光明之中，而是从远处凝望光明，朝它奔去，就在那拼命忘我的时间里，才有人生真正的充实。</li><li>每一日所付出的代价都比前一日高，因为你的生命又消短了一天，所以每一日都要更积极。今天太宝贵，不应该为酸苦的忧虑和辛涩的悔恨所销蚀，抬起下巴，抓住今天，它不再回来。</li><li>不要再埋怨命运，以感恩的心态面对生活，人生最怕什么都想计较，却又什么都抓不牢。失去的风景，走散的人，等不来的渴望，全都住在缘分的尽头。何必太执着，该来的自然来，会走的留不住。放开执念，随缘是最好的生活。</li></ol></blockquote><h2 id="哲学"><a href="#哲学" class="headerlink" title="哲学"></a>哲学</h2><blockquote><ol><li>这是极为特殊的历史转折期，物质文明发展到这一步注定了精神（信仰）的缺失，灵魂空虚、物欲横流，人们的精神堕入虚无主义，只能沉浸在金钱物质欲望和肉体感官刺激中，有各种不安和痛苦。多少年轻人也失去了纯真的理想和纯美的爱情。这绝不仅是我们这个星球上的生命的悲剧，而是任何一种生命在文明发展进程中注定的悲哀。生命的意义到底是什么？我们到底该怎样活着？——《重大人生启示录 前言》</li><li>人生就是由欲望不满足而痛苦和满足之后无趣这两者所构成。你满心期待着未来的某个快乐，未必理智认知到了它是短暂的而不会持久。人的一生的本质是痛苦，快乐只是昙花一现。</li><li>我们总害怕死亡，而如果人真的可以永远活着，我想人们同样会像害怕死亡一样害怕永恒，或厌倦永恒。</li><li>人们总爱追问人生的意义，其实人生本无所谓意义，因为存在先于本质，本质之前的存在是禁绝思考的。人生的无意义赋予了人的自由，倘若人生有一个注定的意义，那么人人都如同一具机器。</li><li>我们诞生在这个世界是被迫的，这是最糟糕的事实。一种理想主义的人生观是：生命的长度无需受制于肉体自然的衰败，它应该是受你的心灵、你的快乐的需要而去自主选择。</li><li>其实这个世界只有“我”，这个世界是我所创造的，这是我的世界，我是孤独的王者，我能感觉全世界都是忧伤的，也能感知全世界都是快乐的。我若死去，我的世界也会崩塌寂灭。</li><li>每个人都没有绝对的道德底线，只是诱惑不够。也没有任何一个人能经受得住集体的道德审判。我们要学会宽容，像谅解自己一样谅解别人。</li><li>我们可以对两个或以上的异性付出我们的爱情吗？当然可以。只要这爱情是纯洁的。</li><li>如果一个女子（男子）貌美，我们都会爱上，如果这就是爱情，这爱是多么脆弱、经不起推敲，于是这爱的热情是多么虚伪。</li><li>一个没有高贵精神世界的人不足以谈真爱，真爱是灵魂层次发生的事情，多数人并没有灵魂。一个有灵魂的人是觉醒的，它必然时刻领悟到他（她）和他（她）所爱的那个人都是宇宙中孤独的生命，他（她）对她（他）的孤独有着深深的悲悯和同情。</li></ol></blockquote><h2 id="生命"><a href="#生命" class="headerlink" title="生命"></a>生命</h2><blockquote><ol><li>今天就是生命，是唯一你能确知的生命。</li><li>人的一生应当这样度过：当回忆往事的时候，他不至于因为虚度年华而痛悔，也不至于因为过去的碌碌无为而羞愧；在临死的时候，他能够说：“我的整个生命和全部精力，都已经献给世界上最壮丽的事业－－为人类的解放而斗争。”</li><li>人生最终的价值在于觉醒和思考的能力，而不只在于生存。</li><li>在命运的颠沛中，最可以看出人们的气节。</li><li>人生是各种不同的变故、循环不已的痛苦和欢乐组成的。那种永远不变的蓝天只存在于心灵中间，向现实的人生去要求未免是奢望。</li><li>勤劳远比黄金可贵。</li><li>自己活着，就是为了使别人活得更美好。</li><li>谁要是游戏人生，他就一事无成；谁不能主宰自己，永远是一个奴隶。</li><li>希望是附丽于存在的，有存在，便有希望，有希望 ，便是光明。</li><li>人间没有永恒的夜晚，世界没有永恒的冬天。</li></ol></blockquote><h2 id="人生"><a href="#人生" class="headerlink" title="人生"></a>人生</h2><blockquote><ol><li>人生的价值，即以其人对于当代所做的工作为尺度。</li><li>人生如蜡烛一样，从顶燃到底，一直都是光明的。</li><li>人生就像弈棋，一步失误，全盘皆输。</li><li>人生天地之间，若白驹之过隙，忽然而已。</li><li>人生意义的大小，不在乎外界的变迁，而在乎内心的经验。</li><li>人生的意义就在这个过程上。你要细细体认和玩味这个过程中的每节，无论它是一节黄金或一节铁；你要认识每节的充分价值。</li><li>人生照例是一场值得一搏的争衡，然而它的奖品是拼斗。</li><li>人生是伟大的宝藏，我晓得从这个宝藏里选取最珍贵的珠宝。</li><li>人生不售来回票，一旦动身，绝不能复返。</li><li>人生是个舞台，所以你得学会演好自己的角色。</li><li>人生像一本书，愚人哗啦哗啦地翻它，而贤者潜心细读。</li><li>人生好像一盒火柴，严禁使用是愚蠢的，滥用则是危险的。</li><li>人的一生是短暂的，但如果卑劣地度过一生，就太长了。[</li><li>人的前路充满快乐，而且非常值得行走。但这只能有一次。</li><li>人生的大悲剧不是人们的死亡，而是他们不再爱人。</li><li>人们自古以来，在这条路上行走，然而，这条路确实是坎坷不平、逶迤曲折、无边无际的，它具有无数分支，充满着欢乐、痛苦、艰险，但这就是人生的道路。泰戈尔</li><li>人生是由各种不同的变故、循环不已的痛苦和欢乐组成的。那种永远不变的蓝天只存在于心灵中，向现实的人生去要求未免是奢望。</li></ol></blockquote><h2 id="友谊"><a href="#友谊" class="headerlink" title="友谊"></a>友谊</h2><blockquote><ol><li>患难见真情。</li><li>朋友丰富人生。</li><li>友谊是心灵的结合。</li><li>友谊永远是美德的辅佐。</li><li>友谊使欢乐倍增，悲痛锐减。</li><li>友谊是一棵可以庇荫的树。</li><li>友谊是一种和谐的平等。</li><li>朋友一直都是我们的另一半。</li><li>仇恨终将泯灭，友谊万古长青。</li><li>真金不怕火炼，患难考验友谊。</li><li>要结识朋友，自己得先是个朋友。</li><li>友情的语言，不是文字，而是意义。</li><li>友谊是一个神圣而又古老的名字。</li><li>谅解、支援和友谊，比什么都重要。</li><li>患难之中的友谊，能够使患难舒缓。</li></ol></blockquote><h2 id="励志"><a href="#励志" class="headerlink" title="励志"></a>励志</h2><blockquote><ol><li>勤奋工作，勇于实践；始终坚持学习；做一个有德行的人；富有创新精神。</li><li>有了坚定的意志，就等于给双脚添了一双翅膀。</li><li>谁有历经千辛万苦的意志，谁就能达到任何目的。</li><li>衰莫大于心死，愁莫大于无志。</li><li>尽管我们用判断力思考问题，但最终解决问题的还是意志，而不才智。</li><li>万事皆由人的意志创造。</li><li>理想是指路明灯。没有理想，就没有坚定的方向，没有方向，没有生活。</li><li>意志是每一个人的精神力量，是要创造或是破坏某种东西的自由的憧憬，是能从无中创造奇迹的创造力。</li><li>忍耐和坚持虽是痛苦的事情，但却能渐渐地为你带来好处。 </li><li>人之所以平凡，在于无法超越自己。</li><li>只有不断找寻机会的人才会及时把握机会。</li><li>人生成功的秘诀是当好机会来临时，立刻抓住它。</li><li>投资知识是明智的，投资网络中的知识就更加明智。</li><li>如果我们都去做自己能力做得到的事，我们真会叫自己大吃一惊。</li><li>成功需要成本，时间也是一种成本，对时间的珍惜就是对成本的节约。</li><li>行动是治愈恐惧的良药，而犹豫拖延将不断滋养恐惧。</li><li>每一个成功者都有一个开始。勇于开始，才能找到成功的路。</li><li>本来无望的事，大胆尝试，往往能成功。</li><li>才华是血汗的结晶。才华是刀刃，辛苦是磨刀石。</li><li>不要因为怕被玫瑰的刺伤到你，就不敢去摘玫瑰。</li><li>困难里包含着胜利，失败里孕育着成功。</li><li>大胆的尝试只等于成功的一半。</li><li>世上最重要的事，不在于我们在何处，而在于我们朝着什么方向走。</li><li>忙于采集的蜜蜂，无暇在人前高谈阔论。</li><li>如果你想攀登高峰，切莫把彩虹当作梯子。</li><li>树苗如果因为怕痛而拒绝修剪,那就永远不会成材。</li><li>行动不一定带来快乐，而无行动则决无快乐。</li><li>一个人是在对周围生活环境的反抗中创造成功的。</li><li>在一个崇高的目的支持下，不停地工作，即使慢、也一定会获得成功。</li><li>上游，是勇士劈风破浪的终点；下游，是懦夫一帆风顺的归宿。</li><li>生命之灯因热情而点燃，生命之舟因拼搏而前行。</li><li>英雄的事业必定包含着艰险，如果没有艰险也就不成为英雄了。</li><li>忍别人所不能忍的痛，吃别人所不能吃的苦，方能收获别人所得不到的收获。</li><li>拥有梦想只是一种智力，实现梦想才是一种能力。</li><li>无论才能知识多么卓着，如果缺乏热情，则无异纸上画饼充饥，无补于事。</li><li>你可以选择这样的“三心二意”：信心恒心决心；创意乐意。名言警句大全</li><li>征服畏惧建立自信的最快最确实的方法，就是去做你害怕的事，直到你获得成功的经验。</li><li>现实是此岸，成功是彼岸，中间隔着湍急的河流，兴趣便是河上的桥，只要行动就可以通过。</li><li>成功是优点的发挥，失败是缺点的累积。走对了路的原因只有一种，走错了路的原因却有很多。</li></ol></blockquote><h2 id="学习"><a href="#学习" class="headerlink" title="学习"></a>学习</h2><blockquote><ol><li>青年最主要的任务是学习。</li><li>青年人首先要树雄心，立大志，其次就要决心为国家、人民作一个有用的人才;为此就要选择一个奋斗的目标来努力学习和实践。</li><li>凡看书不为书所愚始善。</li><li>青年最主要的任务是学习。</li><li>读书是学习，摘抄是整理，写作是创造。</li><li>青年是学习智慧的时期，中年是付诸实践的时期。</li><li>学习有如母亲一般慈爱，它用纯洁和温柔的欢乐来哺育孩子，如果向它要求额外的报酬，也许就是罪过。</li></ol></blockquote>]]></content>
    
    <summary type="html">
    
      &lt;blockquote class=&quot;blockquote-center&quot;&gt;宁愿花时间修炼不完美的自己，也不要浪费时间期待完美的别人&lt;/blockquote&gt;

&lt;h1 id=&quot;名言警句收录&quot;&gt;&lt;a href=&quot;#名言警句收录&quot; class=&quot;headerlink&quot; title=&quot;名言警句收录&quot;&gt;&lt;/a&gt;名言警句收录&lt;/h1&gt;&lt;h2 id=&quot;正能量&quot;&gt;&lt;a href=&quot;#正能量&quot; class=&quot;headerlink&quot; title=&quot;正能量&quot;&gt;&lt;/a&gt;正能量&lt;/h2&gt;&lt;blockquote&gt;
&lt;ol&gt;
&lt;li&gt;我们都得经历一段努力闭嘴不抱怨的时光，才能熠熠生辉，才能去更酷的地方，成为更酷的人。
    
    </summary>
    
      <category term="文学" scheme="https://blog.puchao.cc/categories/%E6%96%87%E5%AD%A6/"/>
    
    
      <category term="名人名言" scheme="https://blog.puchao.cc/tags/%E5%90%8D%E4%BA%BA%E5%90%8D%E8%A8%80/"/>
    
  </entry>
  
  <entry>
    <title>new</title>
    <link href="https://blog.puchao.cc/2019/05/19/new-1/"/>
    <id>https://blog.puchao.cc/2019/05/19/new-1/</id>
    <published>2019-05-19T14:40:08.000Z</published>
    <updated>2019-05-19T14:55:32.301Z</updated>
    
    <content type="html"><![CDATA[<p>这是新页面<br>再次更新</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;这是新页面&lt;br&gt;再次更新&lt;/p&gt;

      
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>webstorm激活以及汉化</title>
    <link href="https://blog.puchao.cc/2019/05/19/webstorm%E6%BF%80%E6%B4%BB%E4%BB%A5%E5%8F%8A%E6%B1%89%E5%8C%96/"/>
    <id>https://blog.puchao.cc/2019/05/19/webstorm激活以及汉化/</id>
    <published>2019-05-18T17:21:21.000Z</published>
    <updated>2019-05-21T11:14:13.853Z</updated>
    
    <content type="html"><![CDATA[<p><blockquote class="blockquote-center">万事皆由人的意志创造</blockquote><br>‘好多刚开始学习前端的小伙伴都不知道怎么选择编辑器，我个人比较喜欢使用Atom跟Webstorm这两个编辑器，<a id="more"></a>两个搭配使用，效果是非常好的。但是由于Webstorm是收费的软件，并且很多小伙伴英文不是很好，英文版的使用起来还是有一些问题的，那这里我就给大家附上它的破解以及汉化教程！当然，支持正版更好！！’</p><h2 id="一、安装"><a href="#一、安装" class="headerlink" title="一、安装"></a>一、安装</h2><blockquote><ul><li>1.官网下载安装包<a href="https://www.jetbrains.com/webstorm/" target="_blank" rel="noopener">https://www.jetbrains.com/webstorm/</a></li></ul></blockquote>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;&lt;blockquote class=&quot;blockquote-center&quot;&gt;万事皆由人的意志创造&lt;/blockquote&gt;&lt;br&gt;‘好多刚开始学习前端的小伙伴都不知道怎么选择编辑器，我个人比较喜欢使用Atom跟Webstorm这两个编辑器，
    
    </summary>
    
      <category term="tool" scheme="https://blog.puchao.cc/categories/tool/"/>
    
    
      <category term="webstorm" scheme="https://blog.puchao.cc/tags/webstorm/"/>
    
  </entry>
  
  <entry>
    <title>域名申请之阿里云</title>
    <link href="https://blog.puchao.cc/2018/12/26/%E5%9F%9F%E5%90%8D%E7%94%B3%E8%AF%B7/"/>
    <id>https://blog.puchao.cc/2018/12/26/域名申请/</id>
    <published>2018-12-25T16:00:00.000Z</published>
    <updated>2019-05-21T11:14:03.347Z</updated>
    
    <content type="html"><![CDATA[<blockquote class="blockquote-center">人之所以平凡，在于无法超越自己</blockquote><p><code>今天给大家分享一下阿里云域名申请以及注册的超详细步骤！！都是个人经验。那说说为什么要申请域名呢？</code></p><blockquote><p>1、当初上大学刚刚接触前端在学习的时候，<a id="more"></a>写了自己的第一个页面，很是开心，想跟朋友家人分享一下，然后，我就问老师，怎样才能在别人的手机或者电脑上看到我做的网页呢？然后老师来了一顿花里胡哨的骚操作，手机拿出来扫描二维码！咦！我做的网页在我的手机上看见了！于是乎，我就开始QQ微信分享！！<br>2、有一个自己的域名方便啊，我们现在做的blog，就是用我自己的域名访问。<br>3、搭配一个服务器或者是虚拟主机可以将自己做过的项目网页上传，随时随地查看，万一哪天忘了个啥，可以打开浏览器查看呐！！<br>4、就当是装逼好了！！</p></blockquote><hr><blockquote><p>今天我们演示的是阿里云的域名申请。至于为什么选择阿里云呢，那就得问马云爸爸了！！因为他牛逼啊！！！好吧，其实是因为当初选择的时候也不知道为什么就选择了阿里云，可能是因为用支付宝方便！</p></blockquote><ul><li><p>首先，咱们打开<a href="https://www.aliyun.com/" target="_blank" rel="noopener">阿里云</a>，免费注册一个账号，也可以用支付宝直接扫码登录，如图依次选择[左上角三杠]</p></li><li><p>–&gt;[产品]–&gt;[精选]–&gt;[域名注册]<br><img src="http://blogimage.puchao.cc/aliyun.png" alt=""></p></li><li><p>然后再这里面输入你想要的域名，比如：niubi<br><img src="http://blogimage.puchao.cc/zhuce.png" alt=""></p></li><li><p>再点击搜索框后面的查域名</p></li><li><p>会出现以下信息</p><p><img src="http://blogimage.puchao.cc/yumiing.png" alt=""></p></li><li><p>在这里面选择自己喜欢（买得起）的后缀域名，比如选择niubi.org，点[立即购买]，以下操作就付钱就OK了，在这也就不演示了。</p></li><li><p>购买成功之后，点击右上角控制台，进入到这个页面<img src="http://blogimage.puchao.cc/kongzhitai.png" alt=""></p></li><li><p>点击[我的云产品]–&gt;[域名]，就可以看到刚刚你买的域名了！到此呢，我们的域名购买也就结束了。下一篇我们讲域名备案，为什么要域名备案呢？？因为这是我们国家法律规定！！！</p></li></ul>]]></content>
    
    <summary type="html">
    
      &lt;blockquote class=&quot;blockquote-center&quot;&gt;人之所以平凡，在于无法超越自己&lt;/blockquote&gt;

&lt;p&gt;&lt;code&gt;今天给大家分享一下阿里云域名申请以及注册的超详细步骤！！都是个人经验。那说说为什么要申请域名呢？&lt;/code&gt;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;1、当初上大学刚刚接触前端在学习的时候，
    
    </summary>
    
      <category term="tool" scheme="https://blog.puchao.cc/categories/tool/"/>
    
    
      <category term="域名" scheme="https://blog.puchao.cc/tags/%E5%9F%9F%E5%90%8D/"/>
    
  </entry>
  
  <entry>
    <title>个人博客--基于HEXO + Git + github搭建个人博客</title>
    <link href="https://blog.puchao.cc/2018/12/03/blog01/"/>
    <id>https://blog.puchao.cc/2018/12/03/blog01/</id>
    <published>2018-12-03T14:13:20.000Z</published>
    <updated>2019-05-21T11:14:08.615Z</updated>
    
    <content type="html"><![CDATA[<blockquote class="blockquote-center">谁有历经千辛万苦的意志，谁就能达到任何目的</blockquote><p><code>搭建个人博客不是很难，完全免费，若要逼格高一点的话，可以花一点小钱，买一个域名。</code></p><p>相信很多计算机专业的道友们都想有一个属于自己的博客吧<a id="more"></a>（至少我在此之前很想），本文将带领大家搭建一个属于自己的博客！虽然网上有很多教程，但是我在自己做的时候就莫名其妙的跳过好多坑！!经过不懈的努力，终于大功告成！个人目前还是很满意的！</p><blockquote><p>申明：本教程仅仅针对windows用户！！</p></blockquote><h2 id="目录"><a href="#目录" class="headerlink" title="目录"></a>目录</h2><h3 id="安装软件"><a href="#安装软件" class="headerlink" title="安装软件"></a>安装软件</h3><h4 id="Git安装"><a href="#Git安装" class="headerlink" title="Git安装"></a>Git安装</h4><h4 id="Hexo安装"><a href="#Hexo安装" class="headerlink" title="Hexo安装"></a>Hexo安装</h4><h4 id="NodeJs安装"><a href="#NodeJs安装" class="headerlink" title="NodeJs安装"></a>NodeJs安装</h4><h3 id="更该主题"><a href="#更该主题" class="headerlink" title="更该主题"></a>更该主题</h3><h3 id="github注册"><a href="#github注册" class="headerlink" title="github注册"></a>github注册</h3><h4 id="账号注册"><a href="#账号注册" class="headerlink" title="账号注册"></a>账号注册</h4><h4 id="创建仓库"><a href="#创建仓库" class="headerlink" title="创建仓库"></a>创建仓库</h4><h3 id="上传到仓库"><a href="#上传到仓库" class="headerlink" title="上传到仓库"></a>上传到仓库</h3><h3 id="域名申请"><a href="#域名申请" class="headerlink" title="域名申请"></a>域名申请</h3><h3 id="域名绑定Page服务"><a href="#域名绑定Page服务" class="headerlink" title="域名绑定Page服务"></a>域名绑定Page服务</h3><h2 id="正文"><a href="#正文" class="headerlink" title="正文"></a>正文</h2><h3 id="Git安装-1"><a href="#Git安装-1" class="headerlink" title="Git安装"></a>Git安装</h3><blockquote><ul><li>根据自己电脑系统下载安装<a href="https://git-scm.com/" target="_blank" rel="noopener">git</a>，安装就选择傻瓜式安装。如果想学习更多git，点击<a href="https://www.liaoxuefeng.com/wiki/0013739516305929606dd18361248578c67b8067c8c017b000" target="_blank" rel="noopener">Git教程</a>，本文仅用到不多的几条命令！</li></ul></blockquote><h3 id="NodeJs安装-1"><a href="#NodeJs安装-1" class="headerlink" title="NodeJs安装"></a>NodeJs安装</h3><blockquote><ul><li>下载安装<a href="https://nodejs.org/en/" target="_blank" rel="noopener">NodeJs</a>,推荐下载左面稳定版！这是<a href="https://www.cnblogs.com/fang-beny/p/4778591.html" target="_blank" rel="noopener">NodeJs简介</a>。</li><li>推荐下载安装到D盘，记住安装路径，一般情况下安装目录为<code>D:\Program Files\nodejs\</code></li><li>安装完成后按Win+R，输入cmd打开控制台输入一下代码检查安装是否正确完成：<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">node -v</span><br><span class="line">npm -v</span><br></pre></td></tr></table></figure></li></ul></blockquote><ul><li>出现以下情况则表示正确安装<br><img src="http://blogimage.puchao.cc/Snipaste_2018-12-03_18-00-54.png" alt=""></li></ul><h3 id="Hexo安装-1"><a href="#Hexo安装-1" class="headerlink" title="Hexo安装"></a>Hexo安装</h3><blockquote><ol><li>在任意一个地方新建一个文件夹，命名为“blog”作为我们的博客的本地文件，比如我是在E盘根目录下键的。</li><li>打开文件夹，鼠标右键选择“Git Bash Here”，打开git控制台，输入命令开始安装<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm install -g hexo-cli #安装hexo脚手架</span><br></pre></td></tr></table></figure></li></ol></blockquote><ul><li>出现下图内容，表示安装正确<br><img src="http://blogimage.puchao.cc/1.png" alt=""></li></ul><hr><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">hexo init #Hexo自动在当前文件夹下下载搭建网站所需的所有文件</span><br></pre></td></tr></table></figure><ul><li>出现下图内容，表示安装正确<br><img src="http://blogimage.puchao.cc/2.png" alt=""></li></ul><hr><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm install #安装依赖包</span><br></pre></td></tr></table></figure><ul><li>出现下图内容，表示安装正确<br><img src="http://blogimage.puchao.cc/3.png" alt=""></li></ul><hr><p>到此为止，如果一路顺利，那么恭喜你，你的个人博客已经生成！<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">hexo g #完整命令为hexo generate，生成静态文件</span><br></pre></td></tr></table></figure></p><ul><li>出现下图内容，表示安装正确<br><img src="http://blogimage.puchao.cc/4.png" alt=""></li></ul><hr><blockquote><p>接下来就是本地预览你的博客！<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">hexo s #完整命令为hexo server，启动服务器，用来本地预览</span><br></pre></td></tr></table></figure></p></blockquote><p><img src="http://blogimage.puchao.cc/6.png" alt=""></p><hr><blockquote><p>此时，我们的博客是不怎么美光，接下来我们给它换个主题。<br>在刚刚的git控制台里面输入代码以下代码，下载theme主题。在此之前，需要按住 “ctrl+c”停止服务器。<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git clone https://github.com/iissnan/hexo-theme-next themes/next</span><br></pre></td></tr></table></figure></p></blockquote><blockquote><p>打开E:\hexo，用你喜欢的编程软件打开 _config.yml 文件，ctrl+f 搜索 theme 关键字，修改为以下代码<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">theme: next</span><br></pre></td></tr></table></figure></p></blockquote><h3 id="github注册-1"><a href="#github注册-1" class="headerlink" title="github注册"></a>github注册</h3><blockquote><p>现在我们的博客仅仅在本地运行，接下来我们就要将它上传的互联网，让小伙伴们观赏我们的博客！</p></blockquote><h4 id="注册账号"><a href="#注册账号" class="headerlink" title="注册账号"></a>注册账号</h4><blockquote><ul><li>如果你有github账号，可以直接跳过这一步。<a href="https://github.com/" target="_blank" rel="noopener">github官网</a>。</li><li>在此处填写信息注册github账号。</li></ul></blockquote><p><img src="http://blogimage.puchao.cc/7.png" alt=""></p><h4 id="创建仓库-1"><a href="#创建仓库-1" class="headerlink" title="创建仓库"></a>创建仓库</h4><blockquote><p>1.点击 “new repository” 按钮创建一个新的仓库</p></blockquote><p><img src="http://blogimage.puchao.cc/8.png" alt=""></p><blockquote><p>2.你仓库的名字必须是你的github的名字+  .github.io</p><blockquote><blockquote><p>比如我的 github 名字是 <strong>Dylan1201</strong>，那么我的仓库名字就是 <strong>Dylan1201.github.io</strong><br>下面的public也要选中</p></blockquote></blockquote></blockquote><blockquote><p>由于我已经创建了一个该名字的仓库，所以不能创建第二个，所以ta给我提示红色框里面的东西。<br>然后点击 “Creating repository” 按钮完成创建。</p></blockquote><p><img src="http://blogimage.puchao.cc/9.png" alt=""></p><h4 id="配置SSH"><a href="#配置SSH" class="headerlink" title="配置SSH"></a>配置SSH</h4><blockquote><p>继续在git里面提交代码 <code>ssh-keygen -t rsa -C &quot;你的邮件地址&quot;</code>,引号里面的内容输入你的邮箱地址，然后回车，会提示你文件保存的路径，这时候按回车键确认，然后会提示你输入密码，输入即可（输入密码是看不到的），然后会确认输入一次，就可以在刚刚的路径看到生成了两个文件，一个是id_rsa，另一个是id_rsa.pub，用sublime打开id_rsa.pub然后选中里面的全部内容，复制下来。<br>打开github，点击右上角小图标，选择 “settings” 按钮。</p></blockquote><p><img src="http://blogimage.puchao.cc/10.png" alt=""></p><blockquote><p>在左面菜单栏中选择 “SSH and GPG keys” 按钮，再点击 “new SSH key” 按钮，“title” 随意填写，将刚刚赋值的代码粘贴到“key”中，然后点击 “add SSH key” 按钮完成公钥添加。</p></blockquote><p><img src="http://blogimage.puchao.cc/11.png" alt=""><br><img src="http://blogimage.puchao.cc/12.png" alt=""></p><h3 id="上传到仓库-1"><a href="#上传到仓库-1" class="headerlink" title="上传到仓库"></a>上传到仓库</h3><blockquote><p>打开E:\hexo，用你喜欢的编程软件打开_config.yml文件，文件最后可以看到</p></blockquote><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">deploy:</span><br><span class="line">  type:</span><br></pre></td></tr></table></figure><p>修改为一下内容，主意，将连接修改为你的连接<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">deploy:</span><br><span class="line">  type: git</span><br><span class="line">  repository: git@github.com:yourname/yourname.github.io.git   #发布到github</span><br><span class="line">  branch: master</span><br></pre></td></tr></table></figure></p><p>在E:/blog 根目录下右键打开“Gti Bash here”，输入以下命令<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">hexo d &amp;&amp; hexo g</span><br></pre></td></tr></table></figure></p><p>如果出现以下提示<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ERROR Deployer not found: git</span><br></pre></td></tr></table></figure></p><p>输入以下命令,然后再输入上面的命令</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm install hexo-deployer-git --save</span><br></pre></td></tr></table></figure><p>这时候如果弹出一个对话框，输入在github上面的用户名和密码即可。<br>现在我们就可以在浏览器中输入网址：<a href="https://yourname.github.io" target="_blank" rel="noopener">https://yourname.github.io</a> 来查看自己的博客了。</p><h3 id="域名申请，请看我的另一篇文章，此处火箭直达！-这也是搭建个人博客唯一需要花钱的地方"><a href="#域名申请，请看我的另一篇文章，此处火箭直达！-这也是搭建个人博客唯一需要花钱的地方" class="headerlink" title="域名申请，请看我的另一篇文章，此处火箭直达！(这也是搭建个人博客唯一需要花钱的地方)"></a>域名申请，请看我的另一篇文章，<a href="../../26/域名申请/">此处火箭直达</a>！(这也是搭建个人博客唯一需要花钱的地方)</h3><h3 id="域名绑定Page服务-1"><a href="#域名绑定Page服务-1" class="headerlink" title="域名绑定Page服务"></a>域名绑定Page服务</h3><blockquote><p>解析一个你喜欢的域名，比如<a href="http://www.123abc.或者blog.123abc.com,然后打开github你刚刚创建的仓库，点击上面的" target="_blank" rel="noopener">www.123abc.或者blog.123abc.com,然后打开github你刚刚创建的仓库，点击上面的</a> “settings” 按钮<br><img src="http://blogimage.puchao.cc/13.png" alt=""><br>在下面找到“GitHub Pages”，在这个地方添加你解析的域名保存即可。<br><img src="http://blogimage.puchao.cc/14.png" alt=""><br>现在你就可以访问域名来访问你的博客了！！</p></blockquote>]]></content>
    
    <summary type="html">
    
      &lt;blockquote class=&quot;blockquote-center&quot;&gt;谁有历经千辛万苦的意志，谁就能达到任何目的&lt;/blockquote&gt;

&lt;p&gt;&lt;code&gt;搭建个人博客不是很难，完全免费，若要逼格高一点的话，可以花一点小钱，买一个域名。&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;相信很多计算机专业的道友们都想有一个属于自己的博客吧
    
    </summary>
    
      <category term="前端" scheme="https://blog.puchao.cc/categories/%E5%89%8D%E7%AB%AF/"/>
    
    
      <category term="blog" scheme="https://blog.puchao.cc/tags/blog/"/>
    
  </entry>
  
  <entry>
    <title>Adobe软件</title>
    <link href="https://blog.puchao.cc/2018/11/14/Adobe%E8%BD%AF%E4%BB%B6/"/>
    <id>https://blog.puchao.cc/2018/11/14/Adobe软件/</id>
    <published>2018-11-13T16:00:00.000Z</published>
    <updated>2019-05-21T09:32:33.656Z</updated>
    
    <content type="html"><![CDATA[<blockquote class="blockquote-center">优秀的人，不是不合群，而是他们合群的人里面没有你</blockquote><p>Adobe旗下软件</p><a id="more"></a><blockquote><ul><li>Adobe PS:<img src="http://blogimage.puchao.cc/%E5%85%AC%E4%BC%97%E5%8F%B72.jpg" alt="images"></li><li>Adobe AE:</li><li>Adobe PR:</li><li>Adobe AU:</li><li>Adobe PS:</li><li>Adobe PS:</li><li>Adobe PS:</li></ul></blockquote>]]></content>
    
    <summary type="html">
    
      &lt;blockquote class=&quot;blockquote-center&quot;&gt;优秀的人，不是不合群，而是他们合群的人里面没有你&lt;/blockquote&gt;


&lt;p&gt;Adobe旗下软件&lt;/p&gt;
    
    </summary>
    
      <category term="tool" scheme="https://blog.puchao.cc/categories/tool/"/>
    
    
      <category term="软件工具" scheme="https://blog.puchao.cc/tags/%E8%BD%AF%E4%BB%B6%E5%B7%A5%E5%85%B7/"/>
    
  </entry>
  
  <entry>
    <title>Windows 好用软件</title>
    <link href="https://blog.puchao.cc/2018/11/13/%E7%94%B5%E8%84%91%E8%BD%AF%E4%BB%B6/"/>
    <id>https://blog.puchao.cc/2018/11/13/电脑软件/</id>
    <published>2018-11-13T04:56:00.000Z</published>
    <updated>2019-05-21T15:06:30.435Z</updated>
    
    <content type="html"><![CDATA[<blockquote class="blockquote-center">只有不断找寻机会的人才会及时把握机会</blockquote><h2 id="电脑杀毒软件"><a href="#电脑杀毒软件" class="headerlink" title="电脑杀毒软件"></a>电脑杀毒软件</h2><h4 id="火绒"><a href="#火绒" class="headerlink" title="火绒"></a><a href="https://www.huorong.cn-" target="_blank" rel="noopener">火绒</a></h4><a id="more"></a><blockquote><p>很多人电脑里面安装360、电脑管家、瑞星、百度、金山卫士，甚至有些人安装好几个，还说电脑卡！这些个杀毒软件彼此之间干架，占用大量的CPU，请问怎么会不卡？？我个人有360洁癖！只要是360公司的软件，我都不会使用！更别说在电脑安装360的软件了，在我看来，360简直就是流氓垃圾！我推荐<a href="https://www.huorong.cn-" target="_blank" rel="noopener">火绒</a>这个软件，个人版免费，不会乱篡改任何东西，甚至外来软件安装都会请求同意，真的是业界良心软件！ </p></blockquote><h2 id="下载软件"><a href="#下载软件" class="headerlink" title="下载软件"></a>下载软件</h2><h4 id="IDM"><a href="#IDM" class="headerlink" title="IDM"></a><a href="http://www.internetdownloadmanager.com/" target="_blank" rel="noopener">IDM</a></h4><blockquote><p>一提到Windows下载软件，大多数人第一个想到的应该就是迅雷了吧，在那个久远的年代，市面上下载软件很多，电驴、QQ旋风、快播（手动滑稽）维棠等好多，迅雷之势其中一个，到现在活下来的并且为大众所知道的，可能就剩迅雷了，虽然免费，但是那个下载速度，真的不想过多的diss，不开会员，下载个蓝光美国大片，最快也就是3MB/秒，下载是真的慢！作为学生党，生活费本就不多，一个月20左右的VIP（土豪绕道而行），虽然不是很贵，但是也没有天天使用，很不划算，所以市面上有各种破解版，但是大多都没啥用。今天我向大家推荐一款非常好用的能够替代迅雷的下载器！<a href="http://www.internetdownloadmanager.com/" target="_blank" rel="noopener">IDM(Internet Download Manager)</a>。具体使用方法自行百度！</p></blockquote>]]></content>
    
    <summary type="html">
    
      &lt;blockquote class=&quot;blockquote-center&quot;&gt;只有不断找寻机会的人才会及时把握机会&lt;/blockquote&gt;

&lt;h2 id=&quot;电脑杀毒软件&quot;&gt;&lt;a href=&quot;#电脑杀毒软件&quot; class=&quot;headerlink&quot; title=&quot;电脑杀毒软件&quot;&gt;&lt;/a&gt;电脑杀毒软件&lt;/h2&gt;&lt;h4 id=&quot;火绒&quot;&gt;&lt;a href=&quot;#火绒&quot; class=&quot;headerlink&quot; title=&quot;火绒&quot;&gt;&lt;/a&gt;&lt;a href=&quot;https://www.huorong.cn-&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;火绒&lt;/a&gt;&lt;/h4&gt;
    
    </summary>
    
      <category term="tool" scheme="https://blog.puchao.cc/categories/tool/"/>
    
    
      <category term="软件工具" scheme="https://blog.puchao.cc/tags/%E8%BD%AF%E4%BB%B6%E5%B7%A5%E5%85%B7/"/>
    
  </entry>
  
</feed>
